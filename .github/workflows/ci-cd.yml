name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/online-school:latest

jobs:
  # 1) Проверка, тесты и миграции
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with: python-version: '3.13'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run migrations
        run: python manage.py migrate
      - name: Run tests
        run: python manage.py test

  # 2) Сборка и пуш Docker-образа
  build-and-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3                             # :contentReference[oaicite:2]{index=2}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3                           # :contentReference[oaicite:3]{index=3}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3                                  # :contentReference[oaicite:4]{index=4}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6                             # :contentReference[oaicite:5]{index=5}
        with:
          push: true
          tags: ${{ env.IMAGE }}

  # 3) Деплой на сервер через SSH
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.2                              #
        with:
          ssh_host: ${{ secrets.SERVER_HOST }}
          ssh_user: ${{ secrets.SERVER_USER }}
          ssh_private_key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/online-school        # путь к проекту на сервере 
            docker pull ${{ env.IMAGE }}
            docker-compose down
            docker-compose up -d --build
            docker system prune -f                                    # очистка неиспользуемых образов :contentReference[oaicite:6]{index=6}
