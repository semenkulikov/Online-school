name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:17
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG_MODE: ${{ secrets.DEBUG_MODE }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      LANGUAGE_CODE: ${{ secrets.LANGUAGE_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create .env file
        run: |
          cat <<EOF > .env
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG_MODE=${{ secrets.DEBUG_MODE }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
          LANGUAGE_CODE=${{ secrets.LANGUAGE_CODE }}
          EOF
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for Postgres..."
            sleep 1
          done
      - name: Run migrations
        run: python manage.py migrate
      - name: Run tests
        run: python manage.py test

  build-and-push:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3                          # ðŸ”‘ must come before build-push :contentReference[oaicite:5]{index=5}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3                     # for multi-arch, optional

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3                   # Buildx builder

      - name: Build and push image
        uses: docker/build-push-action@v6                     # does the `docker buildx build --push` :contentReference[oaicite:6]{index=6}
        with:
          push: true
          tags: ${{ env.IMAGE }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/online-school
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/online-school:latest
            docker compose down
            docker compose up -d --build
