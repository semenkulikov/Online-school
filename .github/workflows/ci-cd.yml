name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/online-school:latest

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run migrations
        run: python manage.py migrate
      - name: Run tests
        run: python manage.py test

  build-and-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3                             # подготовка QEMU для multi-arch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3                           # Buildx для продвинутой сборки образов
      - name: Log in to Docker Hub
        uses: docker/login-action@v3                                  # логин в DockerHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6                             # сборка и пуш образа
        with:
          push: true
          tags: ${{ env.IMAGE }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.2                              # SSH-деплой
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.SERVER_USER }}/online-school
            docker pull ${{ env.IMAGE }}
            docker-compose down
            docker-compose up -d --build
            docker system prune -f
